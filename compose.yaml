# Copyright (c) 2025 CodeLibs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#     http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Intaste Docker Compose - Production/Distribution Configuration
# External access: intaste-ui only (port 3000)
# All other services communicate via internal network

x-health: &curl-health
  test: ["CMD-SHELL", "curl -fsS $$HEALTH_URL || exit 1"]
  interval: 10s
  timeout: 5s
  retries: 30

networks:
  intaste-net:
    driver: bridge

services:
  opensearch:
    image: ghcr.io/codelibs/fess-opensearch:3.2.0
    container_name: intaste-opensearch
    environment:
      - node.name=intaste-opensearch
      - discovery.seed_hosts=intaste-opensearch
      - cluster.initial_cluster_manager_nodes=intaste-opensearch
      - cluster.name=fess-search
      - bootstrap.memory_lock=true
      - node.roles=cluster_manager,data,ingest,ml
      - "OPENSEARCH_JAVA_OPTS=${OPENSEARCH_JAVA_OPTS:- -Xms1g -Xmx1g}"
      - "DISABLE_INSTALL_DEMO_CONFIG=true"
      - "DISABLE_SECURITY_PLUGIN=true"
      - "FESS_DICTIONARY_PATH=/usr/share/opensearch/config/dictionary"
      - TZ=${TZ:-UTC}
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65535
        hard: 65535
    volumes:
      - ./data/opensearch:/usr/share/opensearch/data
      - ./data/dictionary:/usr/share/opensearch/config/dictionary
    networks:
      - intaste-net
    healthcheck:
      <<: *curl-health
      test: ["CMD-SHELL", "curl -fsS http://localhost:9200/_cluster/health || exit 1"]
    restart: unless-stopped

  fess:
    image: ghcr.io/codelibs/fess:15.2.0
    container_name: intaste-fess
    depends_on:
      opensearch:
        condition: service_healthy
    environment:
      - SEARCH_ENGINE_HTTP_URL=http://intaste-opensearch:9200
      - FESS_DICTIONARY_PATH=${FESS_DICTIONARY_PATH:-/usr/share/opensearch/config/dictionary/}
      - TZ=${TZ:-UTC}
    networks:
      - intaste-net
    expose:
      - "8080"
    healthcheck:
      <<: *curl-health
      test: ["CMD-SHELL", "curl -fsS 'http://localhost:8080/api/v1/health' || exit 1"]
    restart: unless-stopped

  ollama:
    image: ollama/ollama:latest
    container_name: intaste-ollama
    networks:
      - intaste-net
    volumes:
      - ./data/ollama:/root/.ollama
    expose:
      - "11434"
    healthcheck:
      test: ["CMD", "ollama", "list"]
      interval: 10s
      timeout: 5s
      retries: 30
    restart: unless-stopped

  intaste-api:
    build:
      context: ./intaste-api
      dockerfile: Dockerfile
      args:
        UID: ${INTASTE_UID:-1000}
        GID: ${INTASTE_GID:-1000}
    container_name: intaste-api
    depends_on:
      fess:
        condition: service_healthy
      ollama:
        condition: service_healthy
    environment:
      - TZ=${TZ:-UTC}
      - INTASTE_API_TOKEN=${INTASTE_API_TOKEN:?INTASTE_API_TOKEN is required}
      - INTASTE_DEFAULT_MODEL=${INTASTE_DEFAULT_MODEL:-gpt-oss}
      - INTASTE_SEARCH_PROVIDER=${INTASTE_SEARCH_PROVIDER:-fess}
      - FESS_BASE_URL=${FESS_BASE_URL:-http://intaste-fess:8080}
      - FESS_TIMEOUT_MS=${FESS_TIMEOUT_MS:-2000}
      - OLLAMA_BASE_URL=${OLLAMA_BASE_URL:-http://intaste-ollama:11434}
      - INTASTE_LLM_TIMEOUT_MS=${INTASTE_LLM_TIMEOUT_MS:-3000}
      - INTASTE_LLM_TEMPERATURE=${INTASTE_LLM_TEMPERATURE:-0.2}
      - INTASTE_LLM_TOP_P=${INTASTE_LLM_TOP_P:-0.9}
      - REQ_TIMEOUT_MS=${REQ_TIMEOUT_MS:-15000}
      - INTASTE_LLM_WARMUP_ENABLED=${INTASTE_LLM_WARMUP_ENABLED:-true}
      - INTASTE_LLM_WARMUP_TIMEOUT_MS=${INTASTE_LLM_WARMUP_TIMEOUT_MS:-30000}
      - INTASTE_RATE_LIMIT_PER_MINUTE=${INTASTE_RATE_LIMIT_PER_MINUTE:-60}
      - CORS_ORIGINS=${CORS_ORIGINS:-http://localhost:3000}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - LOG_PII_MASKING=${LOG_PII_MASKING:-true}
      - DEBUG=${DEBUG:-false}
    networks:
      - intaste-net
    expose:
      - "8000"
    healthcheck:
      <<: *curl-health
      test: ["CMD-SHELL", "uv run python -c \"import httpx; httpx.get('http://localhost:8000/api/v1/health', timeout=2.0)\" || exit 1"]
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped

  intaste-ui:
    build:
      context: ./intaste-ui
      dockerfile: Dockerfile
      args:
        UID: ${INTASTE_UID:-1000}
        GID: ${INTASTE_GID:-1000}
    container_name: intaste-ui
    depends_on:
      intaste-api:
        condition: service_healthy
    environment:
      - NEXT_PUBLIC_API_BASE=${NEXT_PUBLIC_API_BASE:-/api/v1}
      - API_PROXY_URL=http://intaste-api:8000
      - TZ=${TZ:-UTC}
    networks:
      - intaste-net
    ports:
      - "3000:3000"
    healthcheck:
      test: ["CMD-SHELL", "node -e \"require('http').get('http://localhost:3000/', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})\""]
      interval: 10s
      timeout: 3s
      retries: 3
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
