# Copyright (c) 2025 CodeLibs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#     http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write
  packages: write
  pull-requests: write

jobs:
  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate changelog
        id: changelog
        uses: mikepenz/release-changelog-builder-action@v4
        with:
          configuration: |
            {
              "categories": [
                {
                  "title": "## 🚀 Features",
                  "labels": ["feat", "feature"]
                },
                {
                  "title": "## 🐛 Bug Fixes",
                  "labels": ["fix", "bugfix"]
                },
                {
                  "title": "## 📝 Documentation",
                  "labels": ["docs", "documentation"]
                },
                {
                  "title": "## 🧪 Tests",
                  "labels": ["test", "tests"]
                },
                {
                  "title": "## 🔧 Chores",
                  "labels": ["chore"]
                }
              ]
            }
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          body: |
            # Assera ${{ github.ref_name }}

            ${{ steps.changelog.outputs.changelog }}

            ## 📦 Installation

            ### Docker Compose (Recommended)

            ```bash
            # Download compose files
            wget https://raw.githubusercontent.com/${{ github.repository }}/${{ github.ref_name }}/compose.yaml
            wget https://raw.githubusercontent.com/${{ github.repository }}/${{ github.ref_name }}/.env.example

            # Configure
            cp .env.example .env
            # Edit .env and set ASSERA_API_TOKEN

            # Start services
            docker compose up -d

            # Pull LLM model
            docker compose exec ollama ollama pull gpt-oss
            ```

            ### Docker Images

            - API: `ghcr.io/${{ github.repository }}/assera-api:${{ github.ref_name }}`
            - UI: `ghcr.io/${{ github.repository }}/assera-ui:${{ github.ref_name }}`

            ## 📚 Documentation

            - [README](https://github.com/${{ github.repository }}/blob/${{ github.ref_name }}/README.md)
            - [API Documentation](https://github.com/${{ github.repository }}/blob/${{ github.ref_name }}/assera-api/README.md)
            - [UI Documentation](https://github.com/${{ github.repository }}/blob/${{ github.ref_name }}/assera-ui/README.md)
            - [Testing Guide](https://github.com/${{ github.repository }}/blob/${{ github.ref_name }}/TESTING.md)

            ## 🔒 Security

            All Docker images are scanned for vulnerabilities. See the [Security](https://github.com/${{ github.repository }}/security) tab for details.

            ## 📋 What's Changed

          draft: false
          prerelease: false
          generate_release_notes: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  create-release-assets:
    name: Create Release Assets
    runs-on: ubuntu-latest
    needs: create-release
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create distribution archive
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}

          # Create distribution directory
          mkdir -p assera-${VERSION}

          # Copy essential files
          cp compose.yaml assera-${VERSION}/
          cp .env.example assera-${VERSION}/
          cp README.md assera-${VERSION}/
          cp LICENSE assera-${VERSION}/
          cp NOTICE assera-${VERSION}/
          cp Makefile assera-${VERSION}/

          # Create archive
          tar -czf assera-${VERSION}.tar.gz assera-${VERSION}
          zip -r assera-${VERSION}.zip assera-${VERSION}

      - name: Upload release assets
        uses: softprops/action-gh-release@v2
        with:
          files: |
            assera-*.tar.gz
            assera-*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  notify-release:
    name: Notify Release
    runs-on: ubuntu-latest
    needs: [create-release, create-release-assets]
    if: always()
    steps:
      - name: Create summary
        run: |
          echo "# Release ${{ github.ref_name }} Complete! 🎉" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Release Assets" >> $GITHUB_STEP_SUMMARY
          echo "- Source code archives" >> $GITHUB_STEP_SUMMARY
          echo "- Docker images (ghcr.io)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Quick Start" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
          echo "docker compose pull" >> $GITHUB_STEP_SUMMARY
          echo "docker compose up -d" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "View release: https://github.com/${{ github.repository }}/releases/tag/${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
